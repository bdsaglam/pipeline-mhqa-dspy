stages:
  train:
    cmd: >-
      python main.py train
      --dataset-path ${train.dataset.path}
      --dataset-name ${train.dataset.name}
      --dataset-split ${train.dataset.split}
      --retriever ${retrieve.model_type}
      --top-k ${retrieve.top_k}
      --model ${qa.model}
      --temperature ${qa.temperature}
      --technique ${qa.technique}
      --optimizer-path data/raw/optimizer-configs/${train.optimizer}.json
      --ensemble ${train.ensemble}
      --out data/generated/training/trained-program.json
    deps:
      - main.py
      - data/raw/optimizer-configs/${train.optimizer}.json
    outs:
      - data/generated/training/trained-program.json
    params:
      - train.dataset.path
      - train.dataset.name
      - train.dataset.split
      - train.optimizer
      - train.ensemble
      - retrieve.model_type
      - retrieve.top_k
      - qa.model
      - qa.temperature
      - qa.technique

  evaluate:
    cmd: >-
      python main.py evaluate
      --dataset-path ${evaluation.dataset.path}
      --dataset-name ${evaluation.dataset.name}
      --dataset-split ${evaluation.dataset.split}
      --retriever ${retrieve.model_type}
      --top-k ${retrieve.top_k}
      --model ${qa.model}
      --temperature ${qa.temperature}
      --technique ${qa.technique}
      --load-from data/generated/training/trained-program.json
      --out data/generated/evaluation/
    deps:
      - main.py
      - data/generated/training/trained-program.json
    outs:
      - data/generated/evaluation/results.jsonl
    metrics:
      - data/generated/evaluation/scores.json
    params:
      - evaluation.dataset.path
      - evaluation.dataset.name
      - evaluation.dataset.split
      - retrieve.model_type
      - retrieve.top_k
      - qa.model
      - qa.temperature
      - qa.technique
      - run